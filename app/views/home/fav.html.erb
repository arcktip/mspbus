<div class="span12 favorites-container">
  <% unless user_signed_in? %>
    <h2>Favorites</h2>
    <p>You need to be logged in view your favorites.</p>
    <div class="center">
      <a id="signin" href="#" class="btn btn-primary">Sign In</a>
      <a href="users/sign_up" class="btn">Need an Account?</a>
    </div>
  <% else %>
    <div id="table-results"></div>
  <% end %>
</div>

<%= javascript_include_tag "general_navbar" %>
<script>
  $(document).ready(function(){
    $('#fav-list-item').addClass('active');
  var RealTimeView = Backbone.View.extend({

    eta_template: JST['templates/eta_label'],
    nice_ride_template: JST['templates/nice_ride'],
    
    initialize: function(args) {
      _.bindAll(this);

      this.realtime_sources = this.$el.data('realtime');

      if ( this.realtime_sources ) {
        for( var i=0, len=this.realtime_sources.length; i < len; i++ ) {
          this['collection' + i] = new BusETACollection();
          
          var r_collection          = this['collection' + i];
          r_collection.stop_id      = this.realtime_sources[i].external_stop_id;
          r_collection.realtime_url = this.realtime_sources[i].external_stop_url;
          var query_options         = Parsers.utils.parseQueryString( r_collection.realtime_url );

          r_collection.format = query_options.format;
          r_collection.parser = query_options.parser;
          r_collection.logo   = query_options.logo;
         
          if ( !this.$el.find('.collection'+ r_collection.stop_id).length ) {
            this.$el.append('<div class="clearfix collection' + r_collection.stop_id + '"></div>');
          }
          
        }

      }
    },

    render: function(collection) {
      if ( collection.length === 0 ) {
        //this.$el.parent().parent().hide(); //TODO: Should generalize this out of here
      } else {
        this.$el.find('.collection' + collection.stop_id ).html(this[collection.template]({ logo: collection.logo , data: collection.toJSON() }));
      }
    },

    update: function(callback, skip_fetch) {
      var self = this;

      if ( this.realtime_sources ) {
        for( var i=0, len=this.realtime_sources.length; i < len; i++ ) {
          var realtime_collection = this['collection' + i];
          
          if( !skip_fetch && realtime_collection.length === 0 ) {
            
            realtime_collection.fetch({ success: function(collection) {
              self.process_data(collection, 5);
              if(callback) { callback(); }
            } });
          } else {
            if(callback) { callback(); }
          }
        }
      }
      
    },

    process_data: function(collection, num_models) {   
      collection.process_models(num_models);
      this.render(collection);
    }
  });
}
</script>

<% if user_signed_in? %>
<script>
  var views = {};
  var favoriteModel = new FavoriteModel();

  function update_table( collection ) {
    $('#table-results').html( JST['templates/favlist']({ stops: collection }) );
    
    if ( collection.size() > 0 ) {
      
      $(".real-time").each(function(index, item) {
        views[item.id] = new RealTimeView({ el: item });
        views[item.id].update();
      });

      $("#table-results").on('click', '.trashstop', function() {
        var par=$(this).parent();
        var stopid=par.data("stopid");
        par.hide();

        favoriteModel.set('id', stopid);
        favoriteModel.destroy();
      });
    }
  }

  $(document).ready(function(){
    var Favorites = Backbone.Collection.extend({
      url: '/favorite',
    });

    var favoritesCollection = new Favorites();
    favoritesCollection.fetch({ success: function() {
      update_table(favoritesCollection);
    }});

    window.setInterval(update_table, 60000);
  });
</script>
<% else %>
<script>
  $(document).ready(function(){
    $('#signin').click(function(e){
      e.preventDefault();
      navbar_view.toggle_sidebar();
    });
  });
</script>
<% end %>
